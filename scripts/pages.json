[{"name":"abstract suspend fun checkHealth(): Boolean","description":"com.omaroid.domain.repositories.HealthService.checkHealth","location":"ktor-api/com.omaroid.domain.repositories/-health-service/check-health.html","searchKeys":["checkHealth","abstract suspend fun checkHealth(): Boolean","com.omaroid.domain.repositories.HealthService.checkHealth"]},{"name":"abstract suspend fun create(email: Email, name: String): User","description":"com.omaroid.domain.repositories.UserRepository.create","location":"ktor-api/com.omaroid.domain.repositories/-user-repository/create.html","searchKeys":["create","abstract suspend fun create(email: Email, name: String): User","com.omaroid.domain.repositories.UserRepository.create"]},{"name":"abstract suspend fun deleteById(id: UserId): Boolean","description":"com.omaroid.domain.repositories.UserRepository.deleteById","location":"ktor-api/com.omaroid.domain.repositories/-user-repository/delete-by-id.html","searchKeys":["deleteById","abstract suspend fun deleteById(id: UserId): Boolean","com.omaroid.domain.repositories.UserRepository.deleteById"]},{"name":"abstract suspend fun findAll(offset: Int = 0, limit: Int = 10): List<User>","description":"com.omaroid.domain.repositories.UserRepository.findAll","location":"ktor-api/com.omaroid.domain.repositories/-user-repository/find-all.html","searchKeys":["findAll","abstract suspend fun findAll(offset: Int = 0, limit: Int = 10): List<User>","com.omaroid.domain.repositories.UserRepository.findAll"]},{"name":"abstract suspend fun findByEmail(email: Email): User?","description":"com.omaroid.domain.repositories.UserRepository.findByEmail","location":"ktor-api/com.omaroid.domain.repositories/-user-repository/find-by-email.html","searchKeys":["findByEmail","abstract suspend fun findByEmail(email: Email): User?","com.omaroid.domain.repositories.UserRepository.findByEmail"]},{"name":"abstract suspend fun findById(id: UserId): User?","description":"com.omaroid.domain.repositories.UserRepository.findById","location":"ktor-api/com.omaroid.domain.repositories/-user-repository/find-by-id.html","searchKeys":["findById","abstract suspend fun findById(id: UserId): User?","com.omaroid.domain.repositories.UserRepository.findById"]},{"name":"abstract suspend fun getTotalCount(): Int","description":"com.omaroid.domain.repositories.UserRepository.getTotalCount","location":"ktor-api/com.omaroid.domain.repositories/-user-repository/get-total-count.html","searchKeys":["getTotalCount","abstract suspend fun getTotalCount(): Int","com.omaroid.domain.repositories.UserRepository.getTotalCount"]},{"name":"abstract suspend fun update(user: User): User","description":"com.omaroid.domain.repositories.UserRepository.update","location":"ktor-api/com.omaroid.domain.repositories/-user-repository/update.html","searchKeys":["update","abstract suspend fun update(user: User): User","com.omaroid.domain.repositories.UserRepository.update"]},{"name":"class BadRequestException(val message: String = \"Invalid request\") : AppException","description":"com.omaroid.domain.errors.AppException.BadRequestException","location":"ktor-api/com.omaroid.domain.errors/-app-exception/-bad-request-exception/index.html","searchKeys":["BadRequestException","class BadRequestException(val message: String = \"Invalid request\") : AppException","com.omaroid.domain.errors.AppException.BadRequestException"]},{"name":"class ConflictException(val message: String = \"Resource conflict\") : AppException","description":"com.omaroid.domain.errors.AppException.ConflictException","location":"ktor-api/com.omaroid.domain.errors/-app-exception/-conflict-exception/index.html","searchKeys":["ConflictException","class ConflictException(val message: String = \"Resource conflict\") : AppException","com.omaroid.domain.errors.AppException.ConflictException"]},{"name":"class CreateUserUseCase(userRepository: UserRepository)","description":"com.omaroid.domain.usecases.CreateUserUseCase","location":"ktor-api/com.omaroid.domain.usecases/-create-user-use-case/index.html","searchKeys":["CreateUserUseCase","class CreateUserUseCase(userRepository: UserRepository)","com.omaroid.domain.usecases.CreateUserUseCase"]},{"name":"class DatabaseHealthService(database: Database) : HealthService","description":"com.omaroid.data.health.DatabaseHealthService","location":"ktor-api/com.omaroid.data.health/-database-health-service/index.html","searchKeys":["DatabaseHealthService","class DatabaseHealthService(database: Database) : HealthService","com.omaroid.data.health.DatabaseHealthService"]},{"name":"class DeleteUserUseCase(userRepository: UserRepository)","description":"com.omaroid.domain.usecases.DeleteUserUseCase","location":"ktor-api/com.omaroid.domain.usecases/-delete-user-use-case/index.html","searchKeys":["DeleteUserUseCase","class DeleteUserUseCase(userRepository: UserRepository)","com.omaroid.domain.usecases.DeleteUserUseCase"]},{"name":"class GetAllUsersUseCase(userRepository: UserRepository)","description":"com.omaroid.domain.usecases.GetAllUsersUseCase","location":"ktor-api/com.omaroid.domain.usecases/-get-all-users-use-case/index.html","searchKeys":["GetAllUsersUseCase","class GetAllUsersUseCase(userRepository: UserRepository)","com.omaroid.domain.usecases.GetAllUsersUseCase"]},{"name":"class GetUserUseCase(userRepository: UserRepository)","description":"com.omaroid.domain.usecases.GetUserUseCase","location":"ktor-api/com.omaroid.domain.usecases/-get-user-use-case/index.html","searchKeys":["GetUserUseCase","class GetUserUseCase(userRepository: UserRepository)","com.omaroid.domain.usecases.GetUserUseCase"]},{"name":"class NotFoundException(val message: String = \"Resource not found\") : AppException","description":"com.omaroid.domain.errors.AppException.NotFoundException","location":"ktor-api/com.omaroid.domain.errors/-app-exception/-not-found-exception/index.html","searchKeys":["NotFoundException","class NotFoundException(val message: String = \"Resource not found\") : AppException","com.omaroid.domain.errors.AppException.NotFoundException"]},{"name":"class UpdateUserUseCase(userRepository: UserRepository)","description":"com.omaroid.domain.usecases.UpdateUserUseCase","location":"ktor-api/com.omaroid.domain.usecases/-update-user-use-case/index.html","searchKeys":["UpdateUserUseCase","class UpdateUserUseCase(userRepository: UserRepository)","com.omaroid.domain.usecases.UpdateUserUseCase"]},{"name":"class UserController(createUserUseCase: CreateUserUseCase, getUserUseCase: GetUserUseCase, updateUserUseCase: UpdateUserUseCase, deleteUserUseCase: DeleteUserUseCase, getAllUsersUseCase: GetAllUsersUseCase)","description":"com.omaroid.presentation.controllers.UserController","location":"ktor-api/com.omaroid.presentation.controllers/-user-controller/index.html","searchKeys":["UserController","class UserController(createUserUseCase: CreateUserUseCase, getUserUseCase: GetUserUseCase, updateUserUseCase: UpdateUserUseCase, deleteUserUseCase: DeleteUserUseCase, getAllUsersUseCase: GetAllUsersUseCase)","com.omaroid.presentation.controllers.UserController"]},{"name":"class UserRepositoryImpl(database: Database) : UserRepository","description":"com.omaroid.data.repository.UserRepositoryImpl","location":"ktor-api/com.omaroid.data.repository/-user-repository-impl/index.html","searchKeys":["UserRepositoryImpl","class UserRepositoryImpl(database: Database) : UserRepository","com.omaroid.data.repository.UserRepositoryImpl"]},{"name":"constructor(code: String, message: String, details: Map<String, String>? = null)","description":"com.omaroid.presentation.dto.ErrorDto.ErrorDto","location":"ktor-api/com.omaroid.presentation.dto/-error-dto/-error-dto.html","searchKeys":["ErrorDto","constructor(code: String, message: String, details: Map<String, String>? = null)","com.omaroid.presentation.dto.ErrorDto.ErrorDto"]},{"name":"constructor(createUserUseCase: CreateUserUseCase, getUserUseCase: GetUserUseCase, updateUserUseCase: UpdateUserUseCase, deleteUserUseCase: DeleteUserUseCase, getAllUsersUseCase: GetAllUsersUseCase)","description":"com.omaroid.presentation.controllers.UserController.UserController","location":"ktor-api/com.omaroid.presentation.controllers/-user-controller/-user-controller.html","searchKeys":["UserController","constructor(createUserUseCase: CreateUserUseCase, getUserUseCase: GetUserUseCase, updateUserUseCase: UpdateUserUseCase, deleteUserUseCase: DeleteUserUseCase, getAllUsersUseCase: GetAllUsersUseCase)","com.omaroid.presentation.controllers.UserController.UserController"]},{"name":"constructor(database: Database)","description":"com.omaroid.data.health.DatabaseHealthService.DatabaseHealthService","location":"ktor-api/com.omaroid.data.health/-database-health-service/-database-health-service.html","searchKeys":["DatabaseHealthService","constructor(database: Database)","com.omaroid.data.health.DatabaseHealthService.DatabaseHealthService"]},{"name":"constructor(database: Database)","description":"com.omaroid.data.repository.UserRepositoryImpl.UserRepositoryImpl","location":"ktor-api/com.omaroid.data.repository/-user-repository-impl/-user-repository-impl.html","searchKeys":["UserRepositoryImpl","constructor(database: Database)","com.omaroid.data.repository.UserRepositoryImpl.UserRepositoryImpl"]},{"name":"constructor(email: String, name: String)","description":"com.omaroid.presentation.dto.CreateUserRequestDto.CreateUserRequestDto","location":"ktor-api/com.omaroid.presentation.dto/-create-user-request-dto/-create-user-request-dto.html","searchKeys":["CreateUserRequestDto","constructor(email: String, name: String)","com.omaroid.presentation.dto.CreateUserRequestDto.CreateUserRequestDto"]},{"name":"constructor(id: Long, email: String, name: String, createdAt: String, updatedAt: String)","description":"com.omaroid.presentation.dto.UserResponseDto.UserResponseDto","location":"ktor-api/com.omaroid.presentation.dto/-user-response-dto/-user-response-dto.html","searchKeys":["UserResponseDto","constructor(id: Long, email: String, name: String, createdAt: String, updatedAt: String)","com.omaroid.presentation.dto.UserResponseDto.UserResponseDto"]},{"name":"constructor(id: UserId, email: Email, name: String, createdAt: Instant, updatedAt: Instant)","description":"com.omaroid.domain.entities.User.User","location":"ktor-api/com.omaroid.domain.entities/-user/-user.html","searchKeys":["User","constructor(id: UserId, email: Email, name: String, createdAt: Instant, updatedAt: Instant)","com.omaroid.domain.entities.User.User"]},{"name":"constructor(message: String = \"Invalid request\")","description":"com.omaroid.domain.errors.AppException.BadRequestException.BadRequestException","location":"ktor-api/com.omaroid.domain.errors/-app-exception/-bad-request-exception/-bad-request-exception.html","searchKeys":["BadRequestException","constructor(message: String = \"Invalid request\")","com.omaroid.domain.errors.AppException.BadRequestException.BadRequestException"]},{"name":"constructor(message: String = \"Resource conflict\")","description":"com.omaroid.domain.errors.AppException.ConflictException.ConflictException","location":"ktor-api/com.omaroid.domain.errors/-app-exception/-conflict-exception/-conflict-exception.html","searchKeys":["ConflictException","constructor(message: String = \"Resource conflict\")","com.omaroid.domain.errors.AppException.ConflictException.ConflictException"]},{"name":"constructor(message: String = \"Resource not found\")","description":"com.omaroid.domain.errors.AppException.NotFoundException.NotFoundException","location":"ktor-api/com.omaroid.domain.errors/-app-exception/-not-found-exception/-not-found-exception.html","searchKeys":["NotFoundException","constructor(message: String = \"Resource not found\")","com.omaroid.domain.errors.AppException.NotFoundException.NotFoundException"]},{"name":"constructor(message: String)","description":"com.omaroid.presentation.plugins.ErrorResponse.ErrorResponse","location":"ktor-api/com.omaroid.presentation.plugins/-error-response/-error-response.html","searchKeys":["ErrorResponse","constructor(message: String)","com.omaroid.presentation.plugins.ErrorResponse.ErrorResponse"]},{"name":"constructor(name: String)","description":"com.omaroid.presentation.dto.UpdateUserRequestDto.UpdateUserRequestDto","location":"ktor-api/com.omaroid.presentation.dto/-update-user-request-dto/-update-user-request-dto.html","searchKeys":["UpdateUserRequestDto","constructor(name: String)","com.omaroid.presentation.dto.UpdateUserRequestDto.UpdateUserRequestDto"]},{"name":"constructor(page: Int, size: Int, total: Int, totalPages: Int, hasNext: Boolean, hasPrevious: Boolean)","description":"com.omaroid.presentation.dto.PaginationDto.PaginationDto","location":"ktor-api/com.omaroid.presentation.dto/-pagination-dto/-pagination-dto.html","searchKeys":["PaginationDto","constructor(page: Int, size: Int, total: Int, totalPages: Int, hasNext: Boolean, hasPrevious: Boolean)","com.omaroid.presentation.dto.PaginationDto.PaginationDto"]},{"name":"constructor(port: Int, host: String)","description":"com.omaroid.config.ServerConfig.ServerConfig","location":"ktor-api/com.omaroid.config/-server-config/-server-config.html","searchKeys":["ServerConfig","constructor(port: Int, host: String)","com.omaroid.config.ServerConfig.ServerConfig"]},{"name":"constructor(server: ServerConfig, database: DatabaseConfig)","description":"com.omaroid.config.AppConfig.AppConfig","location":"ktor-api/com.omaroid.config/-app-config/-app-config.html","searchKeys":["AppConfig","constructor(server: ServerConfig, database: DatabaseConfig)","com.omaroid.config.AppConfig.AppConfig"]},{"name":"constructor(status: String, timestamp: String, database: String, version: String = \"0.0.1\", error: String? = null)","description":"com.omaroid.presentation.dto.HealthStatus.HealthStatus","location":"ktor-api/com.omaroid.presentation.dto/-health-status/-health-status.html","searchKeys":["HealthStatus","constructor(status: String, timestamp: String, database: String, version: String = \"0.0.1\", error: String? = null)","com.omaroid.presentation.dto.HealthStatus.HealthStatus"]},{"name":"constructor(success: Boolean, data: T? = null, error: ErrorDto? = null, timestamp: String)","description":"com.omaroid.presentation.dto.ApiResponse.ApiResponse","location":"ktor-api/com.omaroid.presentation.dto/-api-response/-api-response.html","searchKeys":["ApiResponse","constructor(success: Boolean, data: T? = null, error: ErrorDto? = null, timestamp: String)","com.omaroid.presentation.dto.ApiResponse.ApiResponse"]},{"name":"constructor(url: String, driver: String, user: String, password: String)","description":"com.omaroid.config.DatabaseConfig.DatabaseConfig","location":"ktor-api/com.omaroid.config/-database-config/-database-config.html","searchKeys":["DatabaseConfig","constructor(url: String, driver: String, user: String, password: String)","com.omaroid.config.DatabaseConfig.DatabaseConfig"]},{"name":"constructor(userRepository: UserRepository)","description":"com.omaroid.domain.usecases.CreateUserUseCase.CreateUserUseCase","location":"ktor-api/com.omaroid.domain.usecases/-create-user-use-case/-create-user-use-case.html","searchKeys":["CreateUserUseCase","constructor(userRepository: UserRepository)","com.omaroid.domain.usecases.CreateUserUseCase.CreateUserUseCase"]},{"name":"constructor(userRepository: UserRepository)","description":"com.omaroid.domain.usecases.DeleteUserUseCase.DeleteUserUseCase","location":"ktor-api/com.omaroid.domain.usecases/-delete-user-use-case/-delete-user-use-case.html","searchKeys":["DeleteUserUseCase","constructor(userRepository: UserRepository)","com.omaroid.domain.usecases.DeleteUserUseCase.DeleteUserUseCase"]},{"name":"constructor(userRepository: UserRepository)","description":"com.omaroid.domain.usecases.GetAllUsersUseCase.GetAllUsersUseCase","location":"ktor-api/com.omaroid.domain.usecases/-get-all-users-use-case/-get-all-users-use-case.html","searchKeys":["GetAllUsersUseCase","constructor(userRepository: UserRepository)","com.omaroid.domain.usecases.GetAllUsersUseCase.GetAllUsersUseCase"]},{"name":"constructor(userRepository: UserRepository)","description":"com.omaroid.domain.usecases.GetUserUseCase.GetUserUseCase","location":"ktor-api/com.omaroid.domain.usecases/-get-user-use-case/-get-user-use-case.html","searchKeys":["GetUserUseCase","constructor(userRepository: UserRepository)","com.omaroid.domain.usecases.GetUserUseCase.GetUserUseCase"]},{"name":"constructor(userRepository: UserRepository)","description":"com.omaroid.domain.usecases.UpdateUserUseCase.UpdateUserUseCase","location":"ktor-api/com.omaroid.domain.usecases/-update-user-use-case/-update-user-use-case.html","searchKeys":["UpdateUserUseCase","constructor(userRepository: UserRepository)","com.omaroid.domain.usecases.UpdateUserUseCase.UpdateUserUseCase"]},{"name":"constructor(users: List<UserResponseDto>, pagination: PaginationDto)","description":"com.omaroid.presentation.dto.UsersPageResponseDto.UsersPageResponseDto","location":"ktor-api/com.omaroid.presentation.dto/-users-page-response-dto/-users-page-response-dto.html","searchKeys":["UsersPageResponseDto","constructor(users: List<UserResponseDto>, pagination: PaginationDto)","com.omaroid.presentation.dto.UsersPageResponseDto.UsersPageResponseDto"]},{"name":"constructor(value: Long)","description":"com.omaroid.domain.entities.UserId.UserId","location":"ktor-api/com.omaroid.domain.entities/-user-id/-user-id.html","searchKeys":["UserId","constructor(value: Long)","com.omaroid.domain.entities.UserId.UserId"]},{"name":"constructor(value: String)","description":"com.omaroid.domain.entities.Email.Email","location":"ktor-api/com.omaroid.domain.entities/-email/-email.html","searchKeys":["Email","constructor(value: String)","com.omaroid.domain.entities.Email.Email"]},{"name":"data class ApiResponse<T>(val success: Boolean, val data: T? = null, val error: ErrorDto? = null, val timestamp: String)","description":"com.omaroid.presentation.dto.ApiResponse","location":"ktor-api/com.omaroid.presentation.dto/-api-response/index.html","searchKeys":["ApiResponse","data class ApiResponse<T>(val success: Boolean, val data: T? = null, val error: ErrorDto? = null, val timestamp: String)","com.omaroid.presentation.dto.ApiResponse"]},{"name":"data class AppConfig(val server: ServerConfig, val database: DatabaseConfig)","description":"com.omaroid.config.AppConfig","location":"ktor-api/com.omaroid.config/-app-config/index.html","searchKeys":["AppConfig","data class AppConfig(val server: ServerConfig, val database: DatabaseConfig)","com.omaroid.config.AppConfig"]},{"name":"data class CreateUserRequestDto(val email: String, val name: String)","description":"com.omaroid.presentation.dto.CreateUserRequestDto","location":"ktor-api/com.omaroid.presentation.dto/-create-user-request-dto/index.html","searchKeys":["CreateUserRequestDto","data class CreateUserRequestDto(val email: String, val name: String)","com.omaroid.presentation.dto.CreateUserRequestDto"]},{"name":"data class DatabaseConfig(val url: String, val driver: String, val user: String, val password: String)","description":"com.omaroid.config.DatabaseConfig","location":"ktor-api/com.omaroid.config/-database-config/index.html","searchKeys":["DatabaseConfig","data class DatabaseConfig(val url: String, val driver: String, val user: String, val password: String)","com.omaroid.config.DatabaseConfig"]},{"name":"data class ErrorDto(val code: String, val message: String, val details: Map<String, String>? = null)","description":"com.omaroid.presentation.dto.ErrorDto","location":"ktor-api/com.omaroid.presentation.dto/-error-dto/index.html","searchKeys":["ErrorDto","data class ErrorDto(val code: String, val message: String, val details: Map<String, String>? = null)","com.omaroid.presentation.dto.ErrorDto"]},{"name":"data class ErrorResponse(val message: String)","description":"com.omaroid.presentation.plugins.ErrorResponse","location":"ktor-api/com.omaroid.presentation.plugins/-error-response/index.html","searchKeys":["ErrorResponse","data class ErrorResponse(val message: String)","com.omaroid.presentation.plugins.ErrorResponse"]},{"name":"data class HealthStatus(val status: String, val timestamp: String, val database: String, val version: String = \"0.0.1\", val error: String? = null)","description":"com.omaroid.presentation.dto.HealthStatus","location":"ktor-api/com.omaroid.presentation.dto/-health-status/index.html","searchKeys":["HealthStatus","data class HealthStatus(val status: String, val timestamp: String, val database: String, val version: String = \"0.0.1\", val error: String? = null)","com.omaroid.presentation.dto.HealthStatus"]},{"name":"data class PaginationDto(val page: Int, val size: Int, val total: Int, val totalPages: Int, val hasNext: Boolean, val hasPrevious: Boolean)","description":"com.omaroid.presentation.dto.PaginationDto","location":"ktor-api/com.omaroid.presentation.dto/-pagination-dto/index.html","searchKeys":["PaginationDto","data class PaginationDto(val page: Int, val size: Int, val total: Int, val totalPages: Int, val hasNext: Boolean, val hasPrevious: Boolean)","com.omaroid.presentation.dto.PaginationDto"]},{"name":"data class ServerConfig(val port: Int, val host: String)","description":"com.omaroid.config.ServerConfig","location":"ktor-api/com.omaroid.config/-server-config/index.html","searchKeys":["ServerConfig","data class ServerConfig(val port: Int, val host: String)","com.omaroid.config.ServerConfig"]},{"name":"data class UpdateUserRequestDto(val name: String)","description":"com.omaroid.presentation.dto.UpdateUserRequestDto","location":"ktor-api/com.omaroid.presentation.dto/-update-user-request-dto/index.html","searchKeys":["UpdateUserRequestDto","data class UpdateUserRequestDto(val name: String)","com.omaroid.presentation.dto.UpdateUserRequestDto"]},{"name":"data class User(val id: UserId, val email: Email, val name: String, val createdAt: Instant, val updatedAt: Instant)","description":"com.omaroid.domain.entities.User","location":"ktor-api/com.omaroid.domain.entities/-user/index.html","searchKeys":["User","data class User(val id: UserId, val email: Email, val name: String, val createdAt: Instant, val updatedAt: Instant)","com.omaroid.domain.entities.User"]},{"name":"data class UserResponseDto(val id: Long, val email: String, val name: String, val createdAt: String, val updatedAt: String)","description":"com.omaroid.presentation.dto.UserResponseDto","location":"ktor-api/com.omaroid.presentation.dto/-user-response-dto/index.html","searchKeys":["UserResponseDto","data class UserResponseDto(val id: Long, val email: String, val name: String, val createdAt: String, val updatedAt: String)","com.omaroid.presentation.dto.UserResponseDto"]},{"name":"data class UsersPageResponseDto(val users: List<UserResponseDto>, val pagination: PaginationDto)","description":"com.omaroid.presentation.dto.UsersPageResponseDto","location":"ktor-api/com.omaroid.presentation.dto/-users-page-response-dto/index.html","searchKeys":["UsersPageResponseDto","data class UsersPageResponseDto(val users: List<UserResponseDto>, val pagination: PaginationDto)","com.omaroid.presentation.dto.UsersPageResponseDto"]},{"name":"fun Application.configureHealthRoutes()","description":"com.omaroid.presentation.routes.configureHealthRoutes","location":"ktor-api/com.omaroid.presentation.routes/configure-health-routes.html","searchKeys":["configureHealthRoutes","fun Application.configureHealthRoutes()","com.omaroid.presentation.routes.configureHealthRoutes"]},{"name":"fun Application.configureRoutes()","description":"com.omaroid.presentation.routes.configureRoutes","location":"ktor-api/com.omaroid.presentation.routes/configure-routes.html","searchKeys":["configureRoutes","fun Application.configureRoutes()","com.omaroid.presentation.routes.configureRoutes"]},{"name":"fun Application.configureStatusPages()","description":"com.omaroid.presentation.plugins.configureStatusPages","location":"ktor-api/com.omaroid.presentation.plugins/configure-status-pages.html","searchKeys":["configureStatusPages","fun Application.configureStatusPages()","com.omaroid.presentation.plugins.configureStatusPages"]},{"name":"fun Application.module(appConfig: AppConfig)","description":"com.omaroid.module","location":"ktor-api/com.omaroid/module.html","searchKeys":["module","fun Application.module(appConfig: AppConfig)","com.omaroid.module"]},{"name":"fun List<User>.toPageDto(page: Int, size: Int, totalCount: Int): UsersPageResponseDto","description":"com.omaroid.presentation.mappers.UserMapper.toPageDto","location":"ktor-api/com.omaroid.presentation.mappers/-user-mapper/to-page-dto.html","searchKeys":["toPageDto","fun List<User>.toPageDto(page: Int, size: Int, totalCount: Int): UsersPageResponseDto","com.omaroid.presentation.mappers.UserMapper.toPageDto"]},{"name":"fun User.toDto(): UserResponseDto","description":"com.omaroid.presentation.mappers.UserMapper.toDto","location":"ktor-api/com.omaroid.presentation.mappers/-user-mapper/to-dto.html","searchKeys":["toDto","fun User.toDto(): UserResponseDto","com.omaroid.presentation.mappers.UserMapper.toDto"]},{"name":"fun createAppModule(appConfig: AppConfig): Module","description":"com.omaroid.di.createAppModule","location":"ktor-api/com.omaroid.di/create-app-module.html","searchKeys":["createAppModule","fun createAppModule(appConfig: AppConfig): Module","com.omaroid.di.createAppModule"]},{"name":"fun createEmptyPage(page: Int, size: Int): UsersPageResponseDto","description":"com.omaroid.presentation.mappers.UserMapper.createEmptyPage","location":"ktor-api/com.omaroid.presentation.mappers/-user-mapper/create-empty-page.html","searchKeys":["createEmptyPage","fun createEmptyPage(page: Int, size: Int): UsersPageResponseDto","com.omaroid.presentation.mappers.UserMapper.createEmptyPage"]},{"name":"fun loadConfig(): AppConfig","description":"com.omaroid.config.loadConfig","location":"ktor-api/com.omaroid.config/load-config.html","searchKeys":["loadConfig","fun loadConfig(): AppConfig","com.omaroid.config.loadConfig"]},{"name":"fun main()","description":"com.omaroid.main","location":"ktor-api/com.omaroid/main.html","searchKeys":["main","fun main()","com.omaroid.main"]},{"name":"interface HealthService","description":"com.omaroid.domain.repositories.HealthService","location":"ktor-api/com.omaroid.domain.repositories/-health-service/index.html","searchKeys":["HealthService","interface HealthService","com.omaroid.domain.repositories.HealthService"]},{"name":"interface UserRepository","description":"com.omaroid.domain.repositories.UserRepository","location":"ktor-api/com.omaroid.domain.repositories/-user-repository/index.html","searchKeys":["UserRepository","interface UserRepository","com.omaroid.domain.repositories.UserRepository"]},{"name":"object UserMapper","description":"com.omaroid.presentation.mappers.UserMapper","location":"ktor-api/com.omaroid.presentation.mappers/-user-mapper/index.html","searchKeys":["UserMapper","object UserMapper","com.omaroid.presentation.mappers.UserMapper"]},{"name":"object UsersTable : LongIdTable","description":"com.omaroid.data.database.tables.UsersTable","location":"ktor-api/com.omaroid.data.database.tables/-users-table/index.html","searchKeys":["UsersTable","object UsersTable : LongIdTable","com.omaroid.data.database.tables.UsersTable"]},{"name":"open override val message: String","description":"com.omaroid.domain.errors.AppException.message","location":"ktor-api/com.omaroid.domain.errors/-app-exception/message.html","searchKeys":["message","open override val message: String","com.omaroid.domain.errors.AppException.message"]},{"name":"open suspend override fun checkHealth(): Boolean","description":"com.omaroid.data.health.DatabaseHealthService.checkHealth","location":"ktor-api/com.omaroid.data.health/-database-health-service/check-health.html","searchKeys":["checkHealth","open suspend override fun checkHealth(): Boolean","com.omaroid.data.health.DatabaseHealthService.checkHealth"]},{"name":"open suspend override fun create(email: Email, name: String): User","description":"com.omaroid.data.repository.UserRepositoryImpl.create","location":"ktor-api/com.omaroid.data.repository/-user-repository-impl/create.html","searchKeys":["create","open suspend override fun create(email: Email, name: String): User","com.omaroid.data.repository.UserRepositoryImpl.create"]},{"name":"open suspend override fun deleteById(id: UserId): Boolean","description":"com.omaroid.data.repository.UserRepositoryImpl.deleteById","location":"ktor-api/com.omaroid.data.repository/-user-repository-impl/delete-by-id.html","searchKeys":["deleteById","open suspend override fun deleteById(id: UserId): Boolean","com.omaroid.data.repository.UserRepositoryImpl.deleteById"]},{"name":"open suspend override fun findAll(offset: Int, limit: Int): List<User>","description":"com.omaroid.data.repository.UserRepositoryImpl.findAll","location":"ktor-api/com.omaroid.data.repository/-user-repository-impl/find-all.html","searchKeys":["findAll","open suspend override fun findAll(offset: Int, limit: Int): List<User>","com.omaroid.data.repository.UserRepositoryImpl.findAll"]},{"name":"open suspend override fun findByEmail(email: Email): User?","description":"com.omaroid.data.repository.UserRepositoryImpl.findByEmail","location":"ktor-api/com.omaroid.data.repository/-user-repository-impl/find-by-email.html","searchKeys":["findByEmail","open suspend override fun findByEmail(email: Email): User?","com.omaroid.data.repository.UserRepositoryImpl.findByEmail"]},{"name":"open suspend override fun findById(id: UserId): User?","description":"com.omaroid.data.repository.UserRepositoryImpl.findById","location":"ktor-api/com.omaroid.data.repository/-user-repository-impl/find-by-id.html","searchKeys":["findById","open suspend override fun findById(id: UserId): User?","com.omaroid.data.repository.UserRepositoryImpl.findById"]},{"name":"open suspend override fun getTotalCount(): Int","description":"com.omaroid.data.repository.UserRepositoryImpl.getTotalCount","location":"ktor-api/com.omaroid.data.repository/-user-repository-impl/get-total-count.html","searchKeys":["getTotalCount","open suspend override fun getTotalCount(): Int","com.omaroid.data.repository.UserRepositoryImpl.getTotalCount"]},{"name":"open suspend override fun update(user: User): User","description":"com.omaroid.data.repository.UserRepositoryImpl.update","location":"ktor-api/com.omaroid.data.repository/-user-repository-impl/update.html","searchKeys":["update","open suspend override fun update(user: User): User","com.omaroid.data.repository.UserRepositoryImpl.update"]},{"name":"sealed class AppException : Exception","description":"com.omaroid.domain.errors.AppException","location":"ktor-api/com.omaroid.domain.errors/-app-exception/index.html","searchKeys":["AppException","sealed class AppException : Exception","com.omaroid.domain.errors.AppException"]},{"name":"suspend fun createUser(call: ApplicationCall)","description":"com.omaroid.presentation.controllers.UserController.createUser","location":"ktor-api/com.omaroid.presentation.controllers/-user-controller/create-user.html","searchKeys":["createUser","suspend fun createUser(call: ApplicationCall)","com.omaroid.presentation.controllers.UserController.createUser"]},{"name":"suspend fun deleteUser(call: ApplicationCall)","description":"com.omaroid.presentation.controllers.UserController.deleteUser","location":"ktor-api/com.omaroid.presentation.controllers/-user-controller/delete-user.html","searchKeys":["deleteUser","suspend fun deleteUser(call: ApplicationCall)","com.omaroid.presentation.controllers.UserController.deleteUser"]},{"name":"suspend fun getAllUsers(call: ApplicationCall)","description":"com.omaroid.presentation.controllers.UserController.getAllUsers","location":"ktor-api/com.omaroid.presentation.controllers/-user-controller/get-all-users.html","searchKeys":["getAllUsers","suspend fun getAllUsers(call: ApplicationCall)","com.omaroid.presentation.controllers.UserController.getAllUsers"]},{"name":"suspend fun getUserById(call: ApplicationCall)","description":"com.omaroid.presentation.controllers.UserController.getUserById","location":"ktor-api/com.omaroid.presentation.controllers/-user-controller/get-user-by-id.html","searchKeys":["getUserById","suspend fun getUserById(call: ApplicationCall)","com.omaroid.presentation.controllers.UserController.getUserById"]},{"name":"suspend fun updateUser(call: ApplicationCall)","description":"com.omaroid.presentation.controllers.UserController.updateUser","location":"ktor-api/com.omaroid.presentation.controllers/-user-controller/update-user.html","searchKeys":["updateUser","suspend fun updateUser(call: ApplicationCall)","com.omaroid.presentation.controllers.UserController.updateUser"]},{"name":"suspend operator fun invoke(email: String, name: String): User","description":"com.omaroid.domain.usecases.CreateUserUseCase.invoke","location":"ktor-api/com.omaroid.domain.usecases/-create-user-use-case/invoke.html","searchKeys":["invoke","suspend operator fun invoke(email: String, name: String): User","com.omaroid.domain.usecases.CreateUserUseCase.invoke"]},{"name":"suspend operator fun invoke(page: Int = 0, size: Int = 10): Pair<List<User>, Int>","description":"com.omaroid.domain.usecases.GetAllUsersUseCase.invoke","location":"ktor-api/com.omaroid.domain.usecases/-get-all-users-use-case/invoke.html","searchKeys":["invoke","suspend operator fun invoke(page: Int = 0, size: Int = 10): Pair<List<User>, Int>","com.omaroid.domain.usecases.GetAllUsersUseCase.invoke"]},{"name":"suspend operator fun invoke(userId: Long): Boolean","description":"com.omaroid.domain.usecases.DeleteUserUseCase.invoke","location":"ktor-api/com.omaroid.domain.usecases/-delete-user-use-case/invoke.html","searchKeys":["invoke","suspend operator fun invoke(userId: Long): Boolean","com.omaroid.domain.usecases.DeleteUserUseCase.invoke"]},{"name":"suspend operator fun invoke(userId: Long): User","description":"com.omaroid.domain.usecases.GetUserUseCase.invoke","location":"ktor-api/com.omaroid.domain.usecases/-get-user-use-case/invoke.html","searchKeys":["invoke","suspend operator fun invoke(userId: Long): User","com.omaroid.domain.usecases.GetUserUseCase.invoke"]},{"name":"suspend operator fun invoke(userId: Long, name: String): User","description":"com.omaroid.domain.usecases.UpdateUserUseCase.invoke","location":"ktor-api/com.omaroid.domain.usecases/-update-user-use-case/invoke.html","searchKeys":["invoke","suspend operator fun invoke(userId: Long, name: String): User","com.omaroid.domain.usecases.UpdateUserUseCase.invoke"]},{"name":"val code: String","description":"com.omaroid.presentation.dto.ErrorDto.code","location":"ktor-api/com.omaroid.presentation.dto/-error-dto/code.html","searchKeys":["code","val code: String","com.omaroid.presentation.dto.ErrorDto.code"]},{"name":"val createdAt: Column<Instant>","description":"com.omaroid.data.database.tables.UsersTable.createdAt","location":"ktor-api/com.omaroid.data.database.tables/-users-table/created-at.html","searchKeys":["createdAt","val createdAt: Column<Instant>","com.omaroid.data.database.tables.UsersTable.createdAt"]},{"name":"val createdAt: Instant","description":"com.omaroid.domain.entities.User.createdAt","location":"ktor-api/com.omaroid.domain.entities/-user/created-at.html","searchKeys":["createdAt","val createdAt: Instant","com.omaroid.domain.entities.User.createdAt"]},{"name":"val createdAt: String","description":"com.omaroid.presentation.dto.UserResponseDto.createdAt","location":"ktor-api/com.omaroid.presentation.dto/-user-response-dto/created-at.html","searchKeys":["createdAt","val createdAt: String","com.omaroid.presentation.dto.UserResponseDto.createdAt"]},{"name":"val data: T? = null","description":"com.omaroid.presentation.dto.ApiResponse.data","location":"ktor-api/com.omaroid.presentation.dto/-api-response/data.html","searchKeys":["data","val data: T? = null","com.omaroid.presentation.dto.ApiResponse.data"]},{"name":"val dataModule: Module","description":"com.omaroid.di.dataModule","location":"ktor-api/com.omaroid.di/data-module.html","searchKeys":["dataModule","val dataModule: Module","com.omaroid.di.dataModule"]},{"name":"val database: DatabaseConfig","description":"com.omaroid.config.AppConfig.database","location":"ktor-api/com.omaroid.config/-app-config/database.html","searchKeys":["database","val database: DatabaseConfig","com.omaroid.config.AppConfig.database"]},{"name":"val database: String","description":"com.omaroid.presentation.dto.HealthStatus.database","location":"ktor-api/com.omaroid.presentation.dto/-health-status/database.html","searchKeys":["database","val database: String","com.omaroid.presentation.dto.HealthStatus.database"]},{"name":"val details: Map<String, String>? = null","description":"com.omaroid.presentation.dto.ErrorDto.details","location":"ktor-api/com.omaroid.presentation.dto/-error-dto/details.html","searchKeys":["details","val details: Map<String, String>? = null","com.omaroid.presentation.dto.ErrorDto.details"]},{"name":"val domainModule: Module","description":"com.omaroid.di.domainModule","location":"ktor-api/com.omaroid.di/domain-module.html","searchKeys":["domainModule","val domainModule: Module","com.omaroid.di.domainModule"]},{"name":"val driver: String","description":"com.omaroid.config.DatabaseConfig.driver","location":"ktor-api/com.omaroid.config/-database-config/driver.html","searchKeys":["driver","val driver: String","com.omaroid.config.DatabaseConfig.driver"]},{"name":"val email: Column<String>","description":"com.omaroid.data.database.tables.UsersTable.email","location":"ktor-api/com.omaroid.data.database.tables/-users-table/email.html","searchKeys":["email","val email: Column<String>","com.omaroid.data.database.tables.UsersTable.email"]},{"name":"val email: Email","description":"com.omaroid.domain.entities.User.email","location":"ktor-api/com.omaroid.domain.entities/-user/email.html","searchKeys":["email","val email: Email","com.omaroid.domain.entities.User.email"]},{"name":"val email: String","description":"com.omaroid.presentation.dto.CreateUserRequestDto.email","location":"ktor-api/com.omaroid.presentation.dto/-create-user-request-dto/email.html","searchKeys":["email","val email: String","com.omaroid.presentation.dto.CreateUserRequestDto.email"]},{"name":"val email: String","description":"com.omaroid.presentation.dto.UserResponseDto.email","location":"ktor-api/com.omaroid.presentation.dto/-user-response-dto/email.html","searchKeys":["email","val email: String","com.omaroid.presentation.dto.UserResponseDto.email"]},{"name":"val error: ErrorDto? = null","description":"com.omaroid.presentation.dto.ApiResponse.error","location":"ktor-api/com.omaroid.presentation.dto/-api-response/error.html","searchKeys":["error","val error: ErrorDto? = null","com.omaroid.presentation.dto.ApiResponse.error"]},{"name":"val error: String? = null","description":"com.omaroid.presentation.dto.HealthStatus.error","location":"ktor-api/com.omaroid.presentation.dto/-health-status/error.html","searchKeys":["error","val error: String? = null","com.omaroid.presentation.dto.HealthStatus.error"]},{"name":"val hasNext: Boolean","description":"com.omaroid.presentation.dto.PaginationDto.hasNext","location":"ktor-api/com.omaroid.presentation.dto/-pagination-dto/has-next.html","searchKeys":["hasNext","val hasNext: Boolean","com.omaroid.presentation.dto.PaginationDto.hasNext"]},{"name":"val hasPrevious: Boolean","description":"com.omaroid.presentation.dto.PaginationDto.hasPrevious","location":"ktor-api/com.omaroid.presentation.dto/-pagination-dto/has-previous.html","searchKeys":["hasPrevious","val hasPrevious: Boolean","com.omaroid.presentation.dto.PaginationDto.hasPrevious"]},{"name":"val host: String","description":"com.omaroid.config.ServerConfig.host","location":"ktor-api/com.omaroid.config/-server-config/host.html","searchKeys":["host","val host: String","com.omaroid.config.ServerConfig.host"]},{"name":"val id: Long","description":"com.omaroid.presentation.dto.UserResponseDto.id","location":"ktor-api/com.omaroid.presentation.dto/-user-response-dto/id.html","searchKeys":["id","val id: Long","com.omaroid.presentation.dto.UserResponseDto.id"]},{"name":"val id: UserId","description":"com.omaroid.domain.entities.User.id","location":"ktor-api/com.omaroid.domain.entities/-user/id.html","searchKeys":["id","val id: UserId","com.omaroid.domain.entities.User.id"]},{"name":"val message: String","description":"com.omaroid.presentation.dto.ErrorDto.message","location":"ktor-api/com.omaroid.presentation.dto/-error-dto/message.html","searchKeys":["message","val message: String","com.omaroid.presentation.dto.ErrorDto.message"]},{"name":"val message: String","description":"com.omaroid.presentation.plugins.ErrorResponse.message","location":"ktor-api/com.omaroid.presentation.plugins/-error-response/message.html","searchKeys":["message","val message: String","com.omaroid.presentation.plugins.ErrorResponse.message"]},{"name":"val name: Column<String>","description":"com.omaroid.data.database.tables.UsersTable.name","location":"ktor-api/com.omaroid.data.database.tables/-users-table/name.html","searchKeys":["name","val name: Column<String>","com.omaroid.data.database.tables.UsersTable.name"]},{"name":"val name: String","description":"com.omaroid.domain.entities.User.name","location":"ktor-api/com.omaroid.domain.entities/-user/name.html","searchKeys":["name","val name: String","com.omaroid.domain.entities.User.name"]},{"name":"val name: String","description":"com.omaroid.presentation.dto.CreateUserRequestDto.name","location":"ktor-api/com.omaroid.presentation.dto/-create-user-request-dto/name.html","searchKeys":["name","val name: String","com.omaroid.presentation.dto.CreateUserRequestDto.name"]},{"name":"val name: String","description":"com.omaroid.presentation.dto.UpdateUserRequestDto.name","location":"ktor-api/com.omaroid.presentation.dto/-update-user-request-dto/name.html","searchKeys":["name","val name: String","com.omaroid.presentation.dto.UpdateUserRequestDto.name"]},{"name":"val name: String","description":"com.omaroid.presentation.dto.UserResponseDto.name","location":"ktor-api/com.omaroid.presentation.dto/-user-response-dto/name.html","searchKeys":["name","val name: String","com.omaroid.presentation.dto.UserResponseDto.name"]},{"name":"val page: Int","description":"com.omaroid.presentation.dto.PaginationDto.page","location":"ktor-api/com.omaroid.presentation.dto/-pagination-dto/page.html","searchKeys":["page","val page: Int","com.omaroid.presentation.dto.PaginationDto.page"]},{"name":"val pagination: PaginationDto","description":"com.omaroid.presentation.dto.UsersPageResponseDto.pagination","location":"ktor-api/com.omaroid.presentation.dto/-users-page-response-dto/pagination.html","searchKeys":["pagination","val pagination: PaginationDto","com.omaroid.presentation.dto.UsersPageResponseDto.pagination"]},{"name":"val password: String","description":"com.omaroid.config.DatabaseConfig.password","location":"ktor-api/com.omaroid.config/-database-config/password.html","searchKeys":["password","val password: String","com.omaroid.config.DatabaseConfig.password"]},{"name":"val port: Int","description":"com.omaroid.config.ServerConfig.port","location":"ktor-api/com.omaroid.config/-server-config/port.html","searchKeys":["port","val port: Int","com.omaroid.config.ServerConfig.port"]},{"name":"val presentationModule: Module","description":"com.omaroid.di.presentationModule","location":"ktor-api/com.omaroid.di/presentation-module.html","searchKeys":["presentationModule","val presentationModule: Module","com.omaroid.di.presentationModule"]},{"name":"val server: ServerConfig","description":"com.omaroid.config.AppConfig.server","location":"ktor-api/com.omaroid.config/-app-config/server.html","searchKeys":["server","val server: ServerConfig","com.omaroid.config.AppConfig.server"]},{"name":"val size: Int","description":"com.omaroid.presentation.dto.PaginationDto.size","location":"ktor-api/com.omaroid.presentation.dto/-pagination-dto/size.html","searchKeys":["size","val size: Int","com.omaroid.presentation.dto.PaginationDto.size"]},{"name":"val status: String","description":"com.omaroid.presentation.dto.HealthStatus.status","location":"ktor-api/com.omaroid.presentation.dto/-health-status/status.html","searchKeys":["status","val status: String","com.omaroid.presentation.dto.HealthStatus.status"]},{"name":"val statusCode: HttpStatusCode","description":"com.omaroid.domain.errors.AppException.statusCode","location":"ktor-api/com.omaroid.domain.errors/-app-exception/status-code.html","searchKeys":["statusCode","val statusCode: HttpStatusCode","com.omaroid.domain.errors.AppException.statusCode"]},{"name":"val success: Boolean","description":"com.omaroid.presentation.dto.ApiResponse.success","location":"ktor-api/com.omaroid.presentation.dto/-api-response/success.html","searchKeys":["success","val success: Boolean","com.omaroid.presentation.dto.ApiResponse.success"]},{"name":"val timestamp: String","description":"com.omaroid.presentation.dto.ApiResponse.timestamp","location":"ktor-api/com.omaroid.presentation.dto/-api-response/timestamp.html","searchKeys":["timestamp","val timestamp: String","com.omaroid.presentation.dto.ApiResponse.timestamp"]},{"name":"val timestamp: String","description":"com.omaroid.presentation.dto.HealthStatus.timestamp","location":"ktor-api/com.omaroid.presentation.dto/-health-status/timestamp.html","searchKeys":["timestamp","val timestamp: String","com.omaroid.presentation.dto.HealthStatus.timestamp"]},{"name":"val total: Int","description":"com.omaroid.presentation.dto.PaginationDto.total","location":"ktor-api/com.omaroid.presentation.dto/-pagination-dto/total.html","searchKeys":["total","val total: Int","com.omaroid.presentation.dto.PaginationDto.total"]},{"name":"val totalPages: Int","description":"com.omaroid.presentation.dto.PaginationDto.totalPages","location":"ktor-api/com.omaroid.presentation.dto/-pagination-dto/total-pages.html","searchKeys":["totalPages","val totalPages: Int","com.omaroid.presentation.dto.PaginationDto.totalPages"]},{"name":"val updatedAt: Column<Instant>","description":"com.omaroid.data.database.tables.UsersTable.updatedAt","location":"ktor-api/com.omaroid.data.database.tables/-users-table/updated-at.html","searchKeys":["updatedAt","val updatedAt: Column<Instant>","com.omaroid.data.database.tables.UsersTable.updatedAt"]},{"name":"val updatedAt: Instant","description":"com.omaroid.domain.entities.User.updatedAt","location":"ktor-api/com.omaroid.domain.entities/-user/updated-at.html","searchKeys":["updatedAt","val updatedAt: Instant","com.omaroid.domain.entities.User.updatedAt"]},{"name":"val updatedAt: String","description":"com.omaroid.presentation.dto.UserResponseDto.updatedAt","location":"ktor-api/com.omaroid.presentation.dto/-user-response-dto/updated-at.html","searchKeys":["updatedAt","val updatedAt: String","com.omaroid.presentation.dto.UserResponseDto.updatedAt"]},{"name":"val url: String","description":"com.omaroid.config.DatabaseConfig.url","location":"ktor-api/com.omaroid.config/-database-config/url.html","searchKeys":["url","val url: String","com.omaroid.config.DatabaseConfig.url"]},{"name":"val user: String","description":"com.omaroid.config.DatabaseConfig.user","location":"ktor-api/com.omaroid.config/-database-config/user.html","searchKeys":["user","val user: String","com.omaroid.config.DatabaseConfig.user"]},{"name":"val users: List<UserResponseDto>","description":"com.omaroid.presentation.dto.UsersPageResponseDto.users","location":"ktor-api/com.omaroid.presentation.dto/-users-page-response-dto/users.html","searchKeys":["users","val users: List<UserResponseDto>","com.omaroid.presentation.dto.UsersPageResponseDto.users"]},{"name":"val value: Long","description":"com.omaroid.domain.entities.UserId.value","location":"ktor-api/com.omaroid.domain.entities/-user-id/value.html","searchKeys":["value","val value: Long","com.omaroid.domain.entities.UserId.value"]},{"name":"val value: String","description":"com.omaroid.domain.entities.Email.value","location":"ktor-api/com.omaroid.domain.entities/-email/value.html","searchKeys":["value","val value: String","com.omaroid.domain.entities.Email.value"]},{"name":"val version: String","description":"com.omaroid.presentation.dto.HealthStatus.version","location":"ktor-api/com.omaroid.presentation.dto/-health-status/version.html","searchKeys":["version","val version: String","com.omaroid.presentation.dto.HealthStatus.version"]},{"name":"value class Email(val value: String)","description":"com.omaroid.domain.entities.Email","location":"ktor-api/com.omaroid.domain.entities/-email/index.html","searchKeys":["Email","value class Email(val value: String)","com.omaroid.domain.entities.Email"]},{"name":"value class UserId(val value: Long)","description":"com.omaroid.domain.entities.UserId","location":"ktor-api/com.omaroid.domain.entities/-user-id/index.html","searchKeys":["UserId","value class UserId(val value: Long)","com.omaroid.domain.entities.UserId"]}]
